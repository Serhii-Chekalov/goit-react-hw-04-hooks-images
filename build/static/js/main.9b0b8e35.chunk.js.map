{"version":3,"sources":["components/Loader/Loader.jsx","API/Api.js","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/App/App.js","reportWebVitals.js","index.js"],"names":["Spinner","type","color","height","width","timeout","fetchImages","name","page","a","axios","get","response","data","hits","Header","styled","header","Form","form","Button","button","Span","span","Input","input","SearchBar","onSubmit","e","preventDefault","target","elements","searchImage","value","toLowerCase","autoComplete","autoFocus","placeholder","LoadMore","Btn","onClick","prototype","PropTypes","func","isRequired","ListItem","li","Img","img","ImageGalleryItem","image","id","webformatURL","tags","src","alt","List","ul","ImageGallery","images","onSelect","map","Overlay","div","ModalStyle","Modal","handleKeyDown","code","props","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","Component","App","state","selectedImage","status","error","loading","showModal","handleSubmit","setState","handleSelectImg","imageURL","prevState","BtnLoadMore","p","prevProps","gallery","trim","length","toast","scrollTo","top","document","documentElement","scrollHeight","behavior","showBtn","largeImageURL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9b0b8e35.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport function Spinner() {\r\n  return (\r\n    <Loader\r\n      type=\"TailSpin\"\r\n      color=\"#00ff55\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000}\r\n    />\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const fetchImages = async (name, page) => {\r\n  const URL = \"https://pixabay.com/api\";\r\n  const API_KEY = \"24156955-5d6b1f88c7bcfef4746f728b1\";\r\n\r\n  const response = await axios.get(\r\n    `${URL}/?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n  return response.data.hits;\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: start;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b3;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { Header, Form, Button, Span, Input } from \"./SearchBar.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const SearchBar = ({ onSubmit }) => {\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(e.target.elements.searchImage.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Form onSubmit={handleSearch}>\r\n        <Button type=\"submit\">\r\n          <Span>Search</Span>\r\n        </Button>\r\n\r\n        <Input\r\n          type=\"text\"\r\n          name=\"searchImage\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Введи имя для поиска картинки...\"\r\n        />\r\n      </Form>\r\n    </Header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoadMore = styled.button`\r\n  display: block;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n  padding: 8px 16px;\r\n  border-radius: 5px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { LoadMore } from \"./Button.styled\";\r\n\r\nexport function Btn({ onClick }) {\r\n  return (\r\n    <LoadMore type=\"button\" onClick={onClick}>\r\n      Загрузить еще...\r\n    </LoadMore>\r\n  );\r\n}\r\n\r\nBtn.prototype = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ListItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import { ListItem, Img } from \"./ImageGalleryItem.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function ImageGalleryItem({ image, onClick }) {\r\n  const { id, webformatURL, tags } = image;\r\n\r\n  return (\r\n    <ListItem onClick={onClick} key={id}>\r\n      <Img src={webformatURL} alt={tags} />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n","import { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { List } from \"./ImageGallery.styled\";\r\n\r\nexport const ImageGallery = ({ images, onSelect }) => {\r\n  return (\r\n    <List>\r\n      {images.map((image, id) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          image={image}\r\n          onClick={() => onSelect(image)}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n  onSelect: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalStyle = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n","import { Component } from \"react\";\r\nimport { Overlay, ModalStyle } from \"./Modal.styled\";\r\n\r\nexport class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onSelect();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onSelect();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return (\r\n      <Overlay onClick={this.handleBackdropClick}>\r\n        <ModalStyle>\r\n          <img src={src} alt={alt} />\r\n        </ModalStyle>\r\n      </Overlay>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Spinner } from \"../Loader/Loader\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nimport { fetchImages } from \"../../API/Api\";\r\nimport { SearchBar } from \"../SearchBar/SearchBar\";\r\nimport { Btn } from \"../Button/Button\";\r\nimport { ImageGallery } from \"../ImageGallery/ImageGallery\";\r\nimport { Modal } from \"../Modal/Modal\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    page: 1,\r\n    selectedImage: null,\r\n    searchImage: null,\r\n    status: \"free\",\r\n    error: null,\r\n    loading: false,\r\n    showModal: false,\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const { searchImage, page } = this.state;\r\n\r\n    if (prevState.searchImage !== searchImage || prevState.page !== page) {\r\n      try {\r\n        this.setState({ status: \"pending\" });\r\n        const gallery = await fetchImages(searchImage, page);\r\n\r\n        this.setState({ status: \"resolved\" });\r\n\r\n        if (searchImage.trim() === \"\" || gallery.length === 0) {\r\n          return toast.error(`таких картинок нет, попробуй еще`);\r\n        }\r\n        this.setState({ images: [...this.state.images, ...gallery] });\r\n\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n      } catch (error) {\r\n        this.setState({ status: \"reject\" });\r\n        toast.error(\"ошибка\");\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = (searchImage) => {\r\n    this.setState({ searchImage: searchImage, page: 1, images: [] }); //перепроверить\r\n  };\r\n\r\n  handleSelectImg = (imageURL) => {\r\n    this.setState((prevState) => ({\r\n      showModal: !prevState.showModal,\r\n      selectedImage: imageURL,\r\n    }));\r\n  };\r\n\r\n  BtnLoadMore = () => {\r\n    this.setState((p) => ({ page: p.page + 1 }));\r\n  };\r\n\r\n  render() {\r\n    const { images, status, showModal, selectedImage } = this.state;\r\n    const showBtn = images.length >= 1;\r\n\r\n    return (\r\n      <div>\r\n        <SearchBar onSubmit={this.handleSubmit} />\r\n        {status === \"pending\" && <Spinner />}\r\n        <ImageGallery images={images} onSelect={this.handleSelectImg} />\r\n        {showBtn && <Btn onClick={this.BtnLoadMore} />}\r\n        {showModal && (\r\n          <Modal\r\n            src={selectedImage.largeImageURL}\r\n            alt={selectedImage.tags}\r\n            onSelect={this.handleSelectImg}\r\n          />\r\n        )}\r\n        <Toaster />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"../src/components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}